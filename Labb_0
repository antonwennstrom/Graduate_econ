/* 

LAB 0 Introduction

Filepath needs to be specified.

Uses data: stataintro_data.dta
Outputs: OUTPUT_data.dta
	logfile_lab0.log
		 
Last edited: 2023-11-xx
Packages needed: ??

*/

set more off
cd "INSERT FILEPATH HERE"
clear all
capture log close
log using logfile_lab0.log, replace

use stataintro_data.dta

* Question 1
describe

/*Variable - numeric/string (categorical/not)
id - numerical
yearb - numerical
monb - numerical
dayb - numerical
intervdate - numerical
employment - numerical (categorical)
jobtype - numerical (categorical)
startjob - numerical
sector - numerical (categorical)
hours - string
grinx_wage - numerical
mainactivity - numerical (categorical)
grinc_sempl - numerical
grinc_sw - numerical
grinc_pens - numerical
maritalstat - numerical (categorical)
satisf_job - numerical (categorical)
satis_fin - numerical (categorical)
children - numerical
sex - string
munic - numerical
*/

* Question 2 

/* By observing the data, we see that the variable "hours" is stored as a string variable. The variable cointains the usual amount of hours the interviewed person works in a week which would make more sense to store as a numerical variable. */

* Question 3
destring hours, replace

* Question 4
generate female = 1 if sex == "F"
replace female = 0 if missing(female)
compare female sex

/* Same number of observations for the variable "female" as the variable "sex" */

* Question 5
tab employment
tab jobtype
tab1 employment jobtype

misstable summarize

/* The function "misstable summarize" shows the number of missing observations for each variable which is usefull when understanding the data and finding any missing value. */

* Question 6 
generate interv_date_DT = date(intervdate, "DMY")
format interv_date_DT %td

histogram interv_date_DT

/* There are a few incomplete observations for interv_date_DT which is not given as DDMMYYYY. One way to solve the problem is to seperate intervdate into three variables (intervday, intervmonth, intervyear) and use these to create a new variable for the date of interview. */

destring intervdate, replace
gen intervday = int(intervdate/1000000)
gen intervmonth = int((intervdate - intervday*1000000)/10000)
gen intervyear = intervdate - intervday*1000000 - intervmonth*10000
gen interv_date_DT1 = mdy(intervmonth, intervday, intervyear) 
format interv_date_DT1 %td
histogram interv_date_DT1

gen birth_date = mdy(monb, dayb, yearb)
format birth_date %td
histogram birth_date

gen age_interv = intervyear - yearb

* Question 7 - Change first variable?

gen total_inc = grinc_wage + grinc_sempl + grinc_sw + grinc_pens
la var total_inc "income from all sources"

egen total_inc2 = rowtotal(grinc_wage grinc_sempl grinc_sw grinc_pens)

compare total_inc total_inc2

/* There are six observations missing in total_inc compared to total_inc2. This is due to the fact that the "egen" function treats missing values as 0 while the "gen" function simply returns missing value/no value. */

* Question 8 

reg total_inc2 female children

/* As can be shown by the regression, gender has an effect on total income which is significant. Female has a negative coefficiant which means that being a female has a negative effect on total income. */

reg total_inc2 female children maritalstat

/* The variable "maritalstat" is a catergorical variable taking on number 1 to 5. In order include marriage status as an independent varibale in the regression we need to specify it as a dummy variable where 1 equals married and 0 any other marriage status. */

gen married = (maritalstat == 1)
reg total_inc2 female children married

* Question 9

label list

/* There is no value label referring to how satisfied people are with a particular dimension of their life. */

label define satisfaction 1 "not satisfied" 2 "ever so slightly satisfied" 3 "slightly satisfied" 4 "somewhat satisfied" 5 "quite satisfied" 6 "fully satisfied"

label values satisf_job satisfaction
label values satisf_fin satisfaction

* Question 10

twoway scatter hours total_inc2 || lfit hours total_inc2

twoway scatter hours total_inc2 || lfit hours total_inc2 if total_inc2 < 1000 || lfit hours total_inc2 if hours < 70

* Question 11 
merge m:1 munic using stataintro_munic.dta

* Question 12
*collapse (count) freq1 = munic if munic == 1

* Question 13

local controls satisf_job satisf_fin

regress total_inc2 hours `controls'


save OUTPUT_data, replace
log close
